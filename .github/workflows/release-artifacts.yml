name: Build and publish release packages V3
permissions:
  contents: write
on:
  release:
    # 'published' is triggered when publishing draft release, 'created' is not
    types: [published]

jobs:
  build-linux-binaries:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-22.04-arm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies for x86_64-unknown-linux-gnu
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake protobuf-compiler gcc-multilib
          rustup default stable
          rustup update
          rustup show
          cargo -Vv
        if: matrix.target == 'x86_64-unknown-linux-gnu'
      - name: Install dependencies for x86_64-unknown-linux-musl
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake protobuf-compiler musl-tools
          rustup target add x86_64-unknown-linux-musl
          rustup default stable
          rustup update
          rustup show
          cargo -Vv
        if: matrix.target == 'x86_64-unknown-linux-musl'

      - uses: actions/checkout@v4
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cross-compilation tools
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu') && contains(matrix.target, '-musl')
        uses: taiki-e/setup-cross-toolchain-action@v1
      
      - name: Build
        run: cargo build --features multiling-chinese,multiling-japanese,multiling-korean --target ${{ matrix.target }} --release
      - name: Rename binary
        run: |
          mv target/${{ matrix.target }}/release/qdrant qdrant-${{ matrix.target }}
      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: qdrant-${{ matrix.target }}
          path: qdrant-${{ matrix.target }}
      - name: Upload release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          type -p curl >/dev/null || (apt update && apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && apt update \
          && apt install gh -y
          gh release upload ${{ github.event.release.tag_name }} qdrant-${{ matrix.target }} --clobber

  build-mac-binaries:
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-13
          - target: aarch64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies
        run: |
          brew update-reset
          brew install gcc cmake protobuf-c
          rustup default stable
          rustup update
          rustup show
          cargo -Vv
      - uses: actions/checkout@v4

      - name: Build
        run: cargo build --features multiling-chinese,multiling-japanese,multiling-korean --target ${{ matrix.target }} --release
      - name: Rename binary
        run: |
          mv target/${{ matrix.target }}/release/qdrant qdrant-${{ matrix.target }}
      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: qdrant-${{ matrix.target }}
          path: qdrant-${{ matrix.target }}  

      - name: Upload package tarball
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ $(sw_vers --productVersion ) =~ ^"13" ]];then
            eval $(/usr/local/bin/brew shellenv)
          else
            eval $(/opt/homebrew/bin/brew shellenv)
          fi
          gh release upload ${{ github.event.release.tag_name }} qdrant-${{ matrix.target }} --clobber
